diff --git a/pkg/util/term/resizeevents.go b/pkg/util/term/resizeevents.go
index e361b1a..b9ae9c8 100644
--- a/pkg/util/term/resizeevents.go
+++ b/pkg/util/term/resizeevents.go
@@ -20,11 +20,6 @@ limitations under the License.
 package term

 import (
-	"os"
-	"os/signal"
-
-	"golang.org/x/sys/unix"
-	"k8s.io/apimachinery/pkg/util/runtime"
 	"k8s.io/client-go/tools/remotecommand"
 )

@@ -32,31 +27,5 @@ import (
 // terminal has resized). After receiving a SIGWINCH, this gets the terminal size and tries to send
 // it to the resizeEvents channel. The goroutine stops when the stop channel is closed.
 func monitorResizeEvents(fd uintptr, resizeEvents chan<- remotecommand.TerminalSize, stop chan struct{}) {
-	go func() {
-		defer runtime.HandleCrash()
-
-		winch := make(chan os.Signal, 1)
-		signal.Notify(winch, unix.SIGWINCH)
-		defer signal.Stop(winch)
-
-		for {
-			select {
-			case <-winch:
-				size := GetSize(fd)
-				if size == nil {
-					return
-				}
-
-				// try to send size
-				select {
-				case resizeEvents <- *size:
-					// success
-				default:
-					// not sent
-				}
-			case <-stop:
-				return
-			}
-		}
-	}()
+
 }
